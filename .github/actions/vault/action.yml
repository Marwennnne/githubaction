name: Vault 
description: vault

inputs:
  secrets-name:
    description: Vault Command to Execute
    required: true
  roleId:
    description: Vault roleId
    required: true
  secretId:
    description: Vault secretId
    required: true
  secrets-path:
    description: build-args
    required: true

runs:
  using: composite
  steps:
    - id: compute_secrets
      shell: bash
      run: |
        SECRETS=""
        IFS=':' read -r -a arrayPath <<< "$SECRET_PATH"
        IFS=':' read -r -a arrayName <<< "$SECRET_NAME"
        for i in "${!arrayPath[@]}"; do
          SECRETS+="secret/data/${arrayPath[i]} ${arrayName[i]} | SECRET_i;"
          echo ::set-output name=SECRET_NAME_$i::${arrayName[i]}
        done
      env:
        SECRET_PATH: ${{ inputs.secrets-path }}
        SECRET_NAME: ${{ inputs.secrets-name }}
    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v2.3.1
      with:
        exportEnv: false
        url: https://vault.outmind.fr
        method: approle
        roleId: ${{ inputs.roleId }}
        secretId: ${{ inputs.secretId }}
        secrets: ${{ steps.compute_secrets.outputs.secrets }}
    - id: args
      shell: bash
      run: |
        env
      env:
        SECRET_NAME: ${{ steps.compute_secrets.outputs.SECRET_NAME_1 }}  
        SECRET_VALUE: ${{ steps.secrets.outputs.SECRET_1 }}  
    - shell: bash
      run: env
      env:
        NODE_ENV: ${{ steps.secrets.outputs.NODE_ENV }}
        CLUSTERING_URL: ${{ steps.secrets.outputs.CLUSTERING_URL }}
        ARGS: ${{ steps.args.outputs.args }}
    - shell: bash
      run: env
      env:
        TEST: ${{ inputs.build-args }}

        